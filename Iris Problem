{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":420,"sourceType":"datasetVersion","datasetId":19}],"dockerImageVersionId":31089,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:25:49.932434Z","iopub.execute_input":"2025-07-12T16:25:49.932721Z","iopub.status.idle":"2025-07-12T16:25:52.263776Z","shell.execute_reply.started":"2025-07-12T16:25:49.932697Z","shell.execute_reply":"2025-07-12T16:25:52.262768Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/iris/Iris.csv\n/kaggle/input/iris/database.sqlite\n","output_type":"stream"}],"execution_count":1},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/iris/Iris.csv')\ndata.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:27:52.521816Z","iopub.execute_input":"2025-07-12T16:27:52.522126Z","iopub.status.idle":"2025-07-12T16:27:52.567065Z","shell.execute_reply.started":"2025-07-12T16:27:52.522104Z","shell.execute_reply":"2025-07-12T16:27:52.566202Z"}},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n0   1            5.1           3.5            1.4           0.2  Iris-setosa\n1   2            4.9           3.0            1.4           0.2  Iris-setosa\n2   3            4.7           3.2            1.3           0.2  Iris-setosa\n3   4            4.6           3.1            1.5           0.2  Iris-setosa\n4   5            5.0           3.6            1.4           0.2  Iris-setosa","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"data.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:28:22.368569Z","iopub.execute_input":"2025-07-12T16:28:22.368964Z","iopub.status.idle":"2025-07-12T16:28:22.375221Z","shell.execute_reply.started":"2025-07-12T16:28:22.368936Z","shell.execute_reply":"2025-07-12T16:28:22.374325Z"}},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"(150, 6)"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"data[\"Species\"].value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:29:15.414714Z","iopub.execute_input":"2025-07-12T16:29:15.415161Z","iopub.status.idle":"2025-07-12T16:29:15.431292Z","shell.execute_reply.started":"2025-07-12T16:29:15.415132Z","shell.execute_reply":"2025-07-12T16:29:15.430359Z"}},"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"Species\nIris-setosa        50\nIris-versicolor    50\nIris-virginica     50\nName: count, dtype: int64"},"metadata":{}}],"execution_count":4},{"cell_type":"code","source":"data.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:29:25.058456Z","iopub.execute_input":"2025-07-12T16:29:25.058754Z","iopub.status.idle":"2025-07-12T16:29:25.082858Z","shell.execute_reply.started":"2025-07-12T16:29:25.058729Z","shell.execute_reply":"2025-07-12T16:29:25.081761Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 150 entries, 0 to 149\nData columns (total 6 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   Id             150 non-null    int64  \n 1   SepalLengthCm  150 non-null    float64\n 2   SepalWidthCm   150 non-null    float64\n 3   PetalLengthCm  150 non-null    float64\n 4   PetalWidthCm   150 non-null    float64\n 5   Species        150 non-null    object \ndtypes: float64(4), int64(1), object(1)\nmemory usage: 7.2+ KB\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"data.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:29:58.534981Z","iopub.execute_input":"2025-07-12T16:29:58.535287Z","iopub.status.idle":"2025-07-12T16:29:58.563593Z","shell.execute_reply.started":"2025-07-12T16:29:58.535263Z","shell.execute_reply":"2025-07-12T16:29:58.562571Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"               Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm\ncount  150.000000     150.000000    150.000000     150.000000    150.000000\nmean    75.500000       5.843333      3.054000       3.758667      1.198667\nstd     43.445368       0.828066      0.433594       1.764420      0.763161\nmin      1.000000       4.300000      2.000000       1.000000      0.100000\n25%     38.250000       5.100000      2.800000       1.600000      0.300000\n50%     75.500000       5.800000      3.000000       4.350000      1.300000\n75%    112.750000       6.400000      3.300000       5.100000      1.800000\nmax    150.000000       7.900000      4.400000       6.900000      2.500000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>75.500000</td>\n      <td>5.843333</td>\n      <td>3.054000</td>\n      <td>3.758667</td>\n      <td>1.198667</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>43.445368</td>\n      <td>0.828066</td>\n      <td>0.433594</td>\n      <td>1.764420</td>\n      <td>0.763161</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000</td>\n      <td>4.300000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>0.100000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>38.250000</td>\n      <td>5.100000</td>\n      <td>2.800000</td>\n      <td>1.600000</td>\n      <td>0.300000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>75.500000</td>\n      <td>5.800000</td>\n      <td>3.000000</td>\n      <td>4.350000</td>\n      <td>1.300000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>112.750000</td>\n      <td>6.400000</td>\n      <td>3.300000</td>\n      <td>5.100000</td>\n      <td>1.800000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>150.000000</td>\n      <td>7.900000</td>\n      <td>4.400000</td>\n      <td>6.900000</td>\n      <td>2.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"data.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:30:24.656696Z","iopub.execute_input":"2025-07-12T16:30:24.657116Z","iopub.status.idle":"2025-07-12T16:30:24.668933Z","shell.execute_reply.started":"2025-07-12T16:30:24.657088Z","shell.execute_reply":"2025-07-12T16:30:24.667860Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"   Id  SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm      Species\n0   1            5.1           3.5            1.4           0.2  Iris-setosa\n1   2            4.9           3.0            1.4           0.2  Iris-setosa\n2   3            4.7           3.2            1.3           0.2  Iris-setosa\n3   4            4.6           3.1            1.5           0.2  Iris-setosa\n4   5            5.0           3.6            1.4           0.2  Iris-setosa","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Id</th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n      <th>Species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>Iris-setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"x = data.iloc[:,1:5]\nx.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:31:09.735490Z","iopub.execute_input":"2025-07-12T16:31:09.735857Z","iopub.status.idle":"2025-07-12T16:31:09.752231Z","shell.execute_reply.started":"2025-07-12T16:31:09.735824Z","shell.execute_reply":"2025-07-12T16:31:09.750995Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   SepalLengthCm  SepalWidthCm  PetalLengthCm  PetalWidthCm\n0            5.1           3.5            1.4           0.2\n1            4.9           3.0            1.4           0.2\n2            4.7           3.2            1.3           0.2\n3            4.6           3.1            1.5           0.2\n4            5.0           3.6            1.4           0.2","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>SepalLengthCm</th>\n      <th>SepalWidthCm</th>\n      <th>PetalLengthCm</th>\n      <th>PetalWidthCm</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"y = data.iloc[:,-1]\ny.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:31:43.731194Z","iopub.execute_input":"2025-07-12T16:31:43.731472Z","iopub.status.idle":"2025-07-12T16:31:43.739448Z","shell.execute_reply.started":"2025-07-12T16:31:43.731452Z","shell.execute_reply":"2025-07-12T16:31:43.738361Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"0    Iris-setosa\n1    Iris-setosa\n2    Iris-setosa\n3    Iris-setosa\n4    Iris-setosa\nName: Species, dtype: object"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\nscaler = StandardScaler()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:33:15.902902Z","iopub.execute_input":"2025-07-12T16:33:15.903224Z","iopub.status.idle":"2025-07-12T16:33:16.524087Z","shell.execute_reply.started":"2025-07-12T16:33:15.903202Z","shell.execute_reply":"2025-07-12T16:33:16.522668Z"}},"outputs":[],"execution_count":10},{"cell_type":"code","source":"x = scaler.fit_transform(x)\nx[0:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:33:52.894471Z","iopub.execute_input":"2025-07-12T16:33:52.894982Z","iopub.status.idle":"2025-07-12T16:33:52.906301Z","shell.execute_reply.started":"2025-07-12T16:33:52.894958Z","shell.execute_reply":"2025-07-12T16:33:52.905085Z"}},"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"array([[-0.90068117,  1.03205722, -1.3412724 , -1.31297673],\n       [-1.14301691, -0.1249576 , -1.3412724 , -1.31297673],\n       [-1.38535265,  0.33784833, -1.39813811, -1.31297673],\n       [-1.50652052,  0.10644536, -1.2844067 , -1.31297673],\n       [-1.02184904,  1.26346019, -1.3412724 , -1.31297673]])"},"metadata":{}}],"execution_count":11},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nx_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:35:24.215416Z","iopub.execute_input":"2025-07-12T16:35:24.215763Z","iopub.status.idle":"2025-07-12T16:35:24.366482Z","shell.execute_reply.started":"2025-07-12T16:35:24.215738Z","shell.execute_reply":"2025-07-12T16:35:24.365181Z"}},"outputs":[],"execution_count":12},{"cell_type":"code","source":"x_train.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:35:48.942667Z","iopub.execute_input":"2025-07-12T16:35:48.943404Z","iopub.status.idle":"2025-07-12T16:35:48.949533Z","shell.execute_reply.started":"2025-07-12T16:35:48.943373Z","shell.execute_reply":"2025-07-12T16:35:48.948388Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"(120, 4)"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"x_test.shape","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:36:09.409261Z","iopub.execute_input":"2025-07-12T16:36:09.409561Z","iopub.status.idle":"2025-07-12T16:36:09.416183Z","shell.execute_reply.started":"2025-07-12T16:36:09.409538Z","shell.execute_reply":"2025-07-12T16:36:09.415152Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"(30, 4)"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"from sklearn.neighbors import KNeighborsClassifier\nmodel = KNeighborsClassifier(n_neighbors=1)\nmodel.fit(x_train,y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:37:40.983233Z","iopub.execute_input":"2025-07-12T16:37:40.983546Z","iopub.status.idle":"2025-07-12T16:37:41.249387Z","shell.execute_reply.started":"2025-07-12T16:37:40.983523Z","shell.execute_reply":"2025-07-12T16:37:41.248334Z"}},"outputs":[{"execution_count":15,"output_type":"execute_result","data":{"text/plain":"KNeighborsClassifier(n_neighbors=1)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier(n_neighbors=1)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier(n_neighbors=1)</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":15},{"cell_type":"code","source":"pred = model.predict(x_test)\npred[0:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:38:27.344241Z","iopub.execute_input":"2025-07-12T16:38:27.344541Z","iopub.status.idle":"2025-07-12T16:38:27.356849Z","shell.execute_reply.started":"2025-07-12T16:38:27.344518Z","shell.execute_reply":"2025-07-12T16:38:27.355984Z"}},"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"array(['Iris-virginica', 'Iris-setosa', 'Iris-setosa', 'Iris-setosa',\n       'Iris-virginica'], dtype=object)"},"metadata":{}}],"execution_count":16},{"cell_type":"code","source":"y_test[0:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:38:40.983073Z","iopub.execute_input":"2025-07-12T16:38:40.983403Z","iopub.status.idle":"2025-07-12T16:38:40.991462Z","shell.execute_reply.started":"2025-07-12T16:38:40.983380Z","shell.execute_reply":"2025-07-12T16:38:40.990505Z"}},"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"132    Iris-virginica\n23        Iris-setosa\n0         Iris-setosa\n38        Iris-setosa\n126    Iris-virginica\nName: Species, dtype: object"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\naccuracy = accuracy_score(y_test,pred)\naccuracy","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:40:57.455413Z","iopub.execute_input":"2025-07-12T16:40:57.455710Z","iopub.status.idle":"2025-07-12T16:40:57.464156Z","shell.execute_reply.started":"2025-07-12T16:40:57.455691Z","shell.execute_reply":"2025-07-12T16:40:57.463244Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"0.8666666666666667"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"result = pd.DataFrame(data = [y_test.values,pred],index = ['y_test','pred'])\nresult.transpose()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:44:45.019997Z","iopub.execute_input":"2025-07-12T16:44:45.020339Z","iopub.status.idle":"2025-07-12T16:44:45.033045Z","shell.execute_reply.started":"2025-07-12T16:44:45.020316Z","shell.execute_reply":"2025-07-12T16:44:45.032175Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"             y_test             pred\n0    Iris-virginica   Iris-virginica\n1       Iris-setosa      Iris-setosa\n2       Iris-setosa      Iris-setosa\n3       Iris-setosa      Iris-setosa\n4    Iris-virginica   Iris-virginica\n5   Iris-versicolor  Iris-versicolor\n6   Iris-versicolor   Iris-virginica\n7    Iris-virginica  Iris-versicolor\n8   Iris-versicolor  Iris-versicolor\n9       Iris-setosa      Iris-setosa\n10  Iris-versicolor  Iris-versicolor\n11      Iris-setosa      Iris-setosa\n12  Iris-versicolor  Iris-versicolor\n13  Iris-versicolor  Iris-versicolor\n14   Iris-virginica   Iris-virginica\n15      Iris-setosa      Iris-setosa\n16   Iris-virginica   Iris-virginica\n17  Iris-versicolor   Iris-virginica\n18   Iris-virginica  Iris-versicolor\n19   Iris-virginica   Iris-virginica\n20   Iris-virginica   Iris-virginica\n21      Iris-setosa      Iris-setosa\n22   Iris-virginica   Iris-virginica\n23   Iris-virginica   Iris-virginica\n24      Iris-setosa      Iris-setosa\n25   Iris-virginica   Iris-virginica\n26  Iris-versicolor  Iris-versicolor\n27   Iris-virginica   Iris-virginica\n28  Iris-versicolor  Iris-versicolor\n29   Iris-virginica   Iris-virginica","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>y_test</th>\n      <th>pred</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Iris-virginica</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Iris-virginica</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Iris-setosa</td>\n      <td>Iris-setosa</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Iris-versicolor</td>\n      <td>Iris-versicolor</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Iris-virginica</td>\n      <td>Iris-virginica</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"correct_sum = []\nfor i in range(1,20):\n    model = KNeighborsClassifier(n_neighbors = i)\n    model.fit(x_train,y_train)\n    pred = model.predict(x_test)\n    correct = np.sum(pred == y_test)\n    correct_sum.append(correct)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:55:54.981965Z","iopub.execute_input":"2025-07-12T16:55:54.982264Z","iopub.status.idle":"2025-07-12T16:55:55.063383Z","shell.execute_reply.started":"2025-07-12T16:55:54.982244Z","shell.execute_reply":"2025-07-12T16:55:55.062360Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"correct_sum","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:56:07.177628Z","iopub.execute_input":"2025-07-12T16:56:07.177954Z","iopub.status.idle":"2025-07-12T16:56:07.184459Z","shell.execute_reply.started":"2025-07-12T16:56:07.177930Z","shell.execute_reply":"2025-07-12T16:56:07.183548Z"}},"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"[26, 27, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 26, 27, 26, 27, 25]"},"metadata":{}}],"execution_count":23},{"cell_type":"code","source":"result = pd.DataFrame(data = correct_sum)\nresult.index = result.index+1\nresult.T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:57:51.422598Z","iopub.execute_input":"2025-07-12T16:57:51.422960Z","iopub.status.idle":"2025-07-12T16:57:51.436080Z","shell.execute_reply.started":"2025-07-12T16:57:51.422936Z","shell.execute_reply":"2025-07-12T16:57:51.435019Z"}},"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"   1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19\n0  26  27  26  27  27  27  27  27  27  27  27  27  27  27  26  27  26  27  25","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>10</th>\n      <th>11</th>\n      <th>12</th>\n      <th>13</th>\n      <th>14</th>\n      <th>15</th>\n      <th>16</th>\n      <th>17</th>\n      <th>18</th>\n      <th>19</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>26</td>\n      <td>27</td>\n      <td>26</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>27</td>\n      <td>26</td>\n      <td>27</td>\n      <td>26</td>\n      <td>27</td>\n      <td>25</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":24},{"cell_type":"code","source":"model = KNeighborsClassifier(n_neighbors = 8)\nmodel.fit(x_train,y_train)\npred = model.predict(x_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:59:06.685695Z","iopub.execute_input":"2025-07-12T16:59:06.686440Z","iopub.status.idle":"2025-07-12T16:59:06.698085Z","shell.execute_reply.started":"2025-07-12T16:59:06.686406Z","shell.execute_reply":"2025-07-12T16:59:06.697008Z"}},"outputs":[],"execution_count":26},{"cell_type":"code","source":"accuracy_score(y_test,pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-12T16:59:29.980363Z","iopub.execute_input":"2025-07-12T16:59:29.980637Z","iopub.status.idle":"2025-07-12T16:59:29.988393Z","shell.execute_reply.started":"2025-07-12T16:59:29.980616Z","shell.execute_reply":"2025-07-12T16:59:29.987373Z"}},"outputs":[{"execution_count":27,"output_type":"execute_result","data":{"text/plain":"0.9"},"metadata":{}}],"execution_count":27}]}